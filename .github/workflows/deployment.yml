name: Deploy
on: 
    pull_request: 
        #Activity types
        types: 
            - opened
        branches:
            - master #master
            - 'dev-*' #dev-new dev-this-is-new
            - 'feat/**' #feat/new feat/new/button
    workflow_dispatch: 
    push:
    #event filters
        branches:
            - master #master
            - 'dev-*' #dev-new dev-this-is-new
            - 'feat/**' #feat/new feat/new/button
        #paths-ignore: 
        #    - '.github/workflows/*'  


jobs:
    # Lint:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Get code
    #           uses: actions/checkout@v4.2.2
    #         - name: Cache dependencies
    #           uses: actions/cache@v4.1.2
    #           with:
    #             path: ~/.npm
    #             key: deps-node-modules-${{ hashFiles('**/package-lock.son') }}
    #         - name: Install dependencies
    #           run: npm ci
    #         - name: Run lint
    #           run: npm run lint
    Test:
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4.2.2
            - name: Cache dependencies
              uses: actions/cache@v4.1.2
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.son') }}
            - name: Install dependencies
              run: npm ci
            - name: Test code
              run: npm test
            - name: Lint coce
              run: npm run lint
    Build:
        needs: Test
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{ steps.publish.outputs.fileName }}
        steps:
            - name: Get code
              uses: actions/checkout@v4.2.2
            - name: Cache dependencies
              uses: actions/cache@v4.1.2
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              run: npm ci
            - name: Build project
              run: npm run build
            - name: Publish Js fileName
              id: publish
              run: find dist/assets/*.js -type f -execdir echo "fileName={}" \; >> "$GITHUB_OUTPUT"
            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4.4.3
              with:
                name: dist-files
                path: dist
                #path: |
                #    dist
                #    package.json
          
    Deploy:
        needs: Build
        runs-on: ubuntu-latest
        steps:
            - name: Download a Build Artifact
              uses: actions/download-artifact@v4.1.8
              with:
                name: dist-files
            - name: output contents
              run: ls
            - name: output filename
              run: echo "${{ needs.Build.outputs.script-file }}"
            - name: Deploy
              run: echo "Deploying..."  

     


